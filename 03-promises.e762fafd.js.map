{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAiC3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxCAN,SAASC,cAAc,SAE/Ba,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,SAASnB,EAAWoB,OAChC,MAAMC,EAAOF,SAAShB,EAAUiB,OAC1BE,EAASH,SAASf,EAAYgB,QAEhCF,EAAQ,GAAKG,EAAO,GAAKC,GAAU,IACrCxB,EAAAyB,OAAOC,QAAQ,yCAIf,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAAG,CAEnCP,GAASG,EAEThB,EAHiBoB,EAGOP,GACrBQ,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAyB,OAAOI,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAyB,OAAOC,QAAQ,sBAAoBlB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  let delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notify.failure('Amount should be set up higher than 0');\n  }\n\n  {\n    for (let i = 1; i <= amount; i += 1) {\n      const position = i;\n      delay += step;\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.e762fafd.js.map"}