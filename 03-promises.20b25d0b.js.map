{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAErCG,EAAOJ,SAASC,cAAc,SACpC,IAAII,EAAQC,SAASP,EAAWQ,OA8BhC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CArCbN,EAAKe,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAOhB,SAASJ,EAAUK,OAC1BgB,EAASjB,SAASH,EAAYI,QAEhCF,EAAQ,GAAKiB,EAAO,GAAKC,GAAU,IACrC1B,EAAA2B,OAAOC,QAAQ,wCAIf,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAAG,CAGnClB,EAFiBkB,EAEOrB,GACrBsB,MAAK,EAAClB,SAAEA,EAAUS,MAAAU,MACjB/B,EAAA2B,OAAOK,QAAQ,uBAAqBpB,QAAiBmB,MAAU,IAEhEE,OAAM,EAACrB,SAAEA,EAAUS,MAAAa,MAClBlC,EAAA2B,OAAOC,QAAQ,sBAAoBhB,QAAesB,MAAU,IAEhE1B,GAASiB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nconst form = document.querySelector('.form');\nlet delay = parseInt(delayInput.value);\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    Notify.failure('These values should be higher than 0');\n  }\n\n  {\n    for (let i = 1; i <= amount; i += 1) {\n      const position = i;\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      delay += step;\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delay","parseInt","value","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","step","amount","Notify","failure","i","then","delay1","success","catch","delay2"],"version":3,"file":"03-promises.20b25d0b.js.map"}